[{"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\index.js":"1","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\reportWebVitals.js":"2","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\App.js":"3","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\FileDetails.jsx":"4","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\StaffList.jsx":"5","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\dataService.jsx":"6","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\NotesManager.jsx":"7","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\AppProcessStage.jsx":"8","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\PreScreening.jsx":"9","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\MailScreening.jsx":"10","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\BillingDetails.jsx":"11","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\DocumentReview.jsx":"12","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\MultipleItemStatus.jsx":"13","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\FormCode.js":"14","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\MaterialUiForm.js":"15","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\Table.js":"16","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\asyncValidate.js":"17","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\rowsData.js":"18","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\AppTracker.js":"19","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\FileAssignment.js":"20","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\AddNewForm.js":"21","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\ViewNotes.js":"22","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\SplitAmount.js":"23"},{"size":1274,"mtime":1612635130775,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":795,"mtime":1612635130773,"results":"27","hashOfConfig":"25"},{"size":5900,"mtime":1612648843498,"results":"28","hashOfConfig":"25"},{"size":1274,"mtime":1612287226669,"results":"29","hashOfConfig":"25"},{"size":309,"mtime":1612273992670,"results":"30","hashOfConfig":"25"},{"size":794,"mtime":1612649668175,"results":"31","hashOfConfig":"25"},{"size":556,"mtime":1612289734265,"results":"32","hashOfConfig":"25"},{"size":1368,"mtime":1612648130107,"results":"33","hashOfConfig":"25"},{"size":1245,"mtime":1612635184229,"results":"34","hashOfConfig":"25"},{"size":1078,"mtime":1612650313436,"results":"35","hashOfConfig":"25"},{"size":804,"mtime":1612445716852,"results":"36","hashOfConfig":"25"},{"size":953,"mtime":1612443345126,"results":"37","hashOfConfig":"25"},{"size":1223,"mtime":1612432621833,"results":"38","hashOfConfig":"25"},{"size":2092,"mtime":1612635184230,"results":"39","hashOfConfig":"25"},{"size":1296,"mtime":1612431152802,"results":"40","hashOfConfig":"25"},{"size":404,"mtime":1612431152831,"results":"41","hashOfConfig":"25"},{"size":657,"mtime":1612431152769,"results":"42","hashOfConfig":"25"},{"size":1802,"mtime":1612635184226,"results":"43","hashOfConfig":"25"},{"size":2675,"mtime":1612635184228,"results":"44","hashOfConfig":"25"},{"size":1646,"mtime":1612648938534,"results":"45","hashOfConfig":"25"},{"size":1648,"mtime":1612649618279,"results":"46","hashOfConfig":"25"},{"size":1652,"mtime":1612650337904,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"w12a7l",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\index.js",[],["103","104"],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\reportWebVitals.js",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\App.js",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\FileDetails.jsx",["105","106"],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\StaffList.jsx",[],["107","108"],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\dataService.jsx",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\NotesManager.jsx",["109"],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\AppProcessStage.jsx",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\PreScreening.jsx",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\MailScreening.jsx",["110","111","112"],"import React, { Fragment } from 'react';\r\nimport { Field } from 'redux-form';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst renderTextField = ({\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n  }) => (\r\n    <TextField\r\n      label={label}\r\n      placeholder={label}\r\n      error={touched && invalid}\r\n      helperText={touched && error}\r\n      {...input}\r\n      {...custom}\r\n    />\r\n  )\r\nconst MailScreening = props => {\r\n      \r\n  const { handleSubmit, pristine, reset, submitting, classes } = props\r\n    return (\r\n    <Fragment>\r\n    <div>\r\n      <h3>Mail Screening</h3>\r\n      <div>\r\n      <h4>Drag and Drop your files here</h4>\r\n        <Field\r\n          name=\"dragDrop\"\r\n          component={renderTextField}\r\n          label=\"Drag and Drop\"\r\n        />\r\n         <h4>Or Click below for file upload</h4>\r\n         <button type=\"submit\" disabled={pristine || submitting}>\r\n          File Upload\r\n        </button>\r\n      </div>\r\n      </div>\r\n  \r\n</Fragment>\r\n);\r\n    }\r\nexport default  MailScreening ;\r\n","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\BillingDetails.jsx",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\DocumentReview.jsx",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\MultipleItemStatus.jsx",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\FormCode.js",["113","114"],"import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n    <div>\r\n      <label className=\"control-label\">{label}</label>\r\n      <div>\r\n        <input {...input} placeholder={label} type={type} className=\"form-control\" />\r\n        {touched && ((error && <span className=\"text-danger\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\nlet FormCode = props => {\r\n  const { handleSubmit, pristine, submitting } = props;\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <div className=\"form-group\">\r\n        <Field name=\"firstName\" component={renderField} label=\"First Name\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Field name=\"lastName\" component={renderField} label=\"Last Name\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Field name=\"email\" component={renderField} label=\"Email\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nFormCode = reduxForm({\r\n  form: 'contact'\r\n})(FormCode);\r\n\r\nexport default FormCode;","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\MaterialUiForm.js",["115","116","117","118"],"import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport asyncValidate from \"./asyncValidate\";\r\nimport Table from \"./Table\";\r\nimport FileDetails from \"./FileDetails\";\r\nimport AppTracker from \"./AppTracker\";\r\nimport NotesManager from \"./NotesManager\";\r\nimport FileAssignment from \"./FileAssignment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  const requiredFields = [\r\n    \"firstName\",\r\n    \"lastName\",\r\n    \"email\",\r\n    \"favoriteColor\",\r\n    \"notes\",\r\n  ];\r\n  requiredFields.forEach((field) => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\";\r\n    }\r\n  });\r\n  if (\r\n    values.email &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n  ) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst MaterialUiForm = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/************ */}\r\n      <div>\r\n        <h3>Files Search </h3>\r\n        {/************ */}\r\n        <Grid container>\r\n          <Grid item xs={4}></Grid>\r\n          <Grid item xs={8}>\r\n            <FileDetails />\r\n          </Grid>\r\n        </Grid>\r\n        {/************ */}\r\n        <div>\r\n          <h3>Files Table </h3>\r\n          <Grid container>\r\n            <Grid item xs={3}></Grid>\r\n            <Grid item xs={6}>\r\n              <Table />\r\n            </Grid>\r\n            <Grid item xs={3}></Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      {/************ */}\r\n      <br />\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={6}>\r\n          <FileAssignment />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <NotesManager />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <AppTracker />\r\n      </Grid>\r\n      <br />\r\n      <br />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"MaterialUiForm\", // a unique identifier for this form\r\n  validate,\r\n  asyncValidate,\r\n})(MaterialUiForm);\r\n","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\Table.js",["119"],"import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport rows from \"./rowsData\";\r\n\r\nexport default () => (\r\n  <div>\r\n    <Paper className=\"container\">\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>S. No</TableCell>\r\n            <TableCell>File No</TableCell>\r\n            <TableCell>ACN</TableCell>\r\n            <TableCell>Company Name</TableCell>\r\n            <TableCell>Application Date</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(({ id, sid, fno, acn, companyname, appdate }) => (\r\n            <TableRow key={id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {sid}\r\n              </TableCell>\r\n              <TableCell >{fno}</TableCell>\r\n              <TableCell >{acn}</TableCell>\r\n              <TableCell >{companyname}</TableCell>\r\n              <TableCell >{appdate}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  </div>\r\n);\r\n","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\asyncValidate.js",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\rowsData.js",["120"],"let id = 0;\r\nconst createData = (sid, fno, acn, companyname, appdate) => {\r\n  id += 1;\r\n  return { id, sid, fno, acn, companyname, appdate };\r\n};\r\n\r\nexport default [\r\n  createData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  ),\r\ncreateData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  ),\r\ncreateData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  ),\r\ncreateData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  ),\r\ncreateData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  )\r\n];\r\n","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\AppTracker.js",["121","122"],"import React, { Fragment } from 'react';\r\nimport BillingDetails from './BillingDetails';\r\nimport MultipleItemStatus from './MultipleItemStatus';\r\nimport MailScreening from './MailScreening';\r\nimport PreScreening from './PreScreening';\r\nimport DocumentReview from './DocumentReview';\r\n\r\nconst AppTracker = props => {\r\n    \r\n  const { handleSubmit, pristine, reset, submitting, classes } = props\r\n    return (\r\n    <Fragment>\r\n    <div>\r\n      <h3>App Tracking Stages</h3>\r\n      {/************ */}\r\n      <PreScreening/>\r\n      {/************ */}\r\n\r\n{/************ */}\r\n<MailScreening/>\r\n      {/************ */}\r\n      <BillingDetails/>\r\n      {/************ */}\r\n      <DocumentReview/>\r\n<MultipleItemStatus/>\r\n\r\n       </div>\r\n      <div />\r\n      \r\n      <div>\r\n        <button type=\"submit\" disabled={pristine || submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n      \r\n</Fragment>\r\n);\r\n    }\r\nexport default  AppTracker ;\r\n","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\FileAssignment.js",["123","124","125","126"],"import React, { Fragment } from 'react';\r\nimport { Field } from 'redux-form';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n    if (!(touched && error)) {\r\n      return\r\n    } else {\r\n      return <FormHelperText>{touched && error}</FormHelperText>\r\n    }\r\n  }\r\nconst radioButton = ({ input, ...rest }) => (\r\n    <FormControl>\r\n      <RadioGroup {...input} {...rest}>\r\n        <FormControlLabel value=\"female\" control={<Radio />} label=\"Complete\" />\r\n        <FormControlLabel value=\"male\" control={<Radio />} label=\"Incomplete\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n  \r\nconst renderSelectField = ({\r\n    input,\r\n    label,\r\n    meta: { touched, error },\r\n    children,\r\n    ...custom\r\n  }) => (\r\n    <FormControl error={touched && error}>\r\n      <InputLabel htmlFor=\"color-native-simple\">{label}</InputLabel>\r\n      <Select\r\n        native\r\n        {...input}\r\n        {...custom}\r\n        inputProps={{\r\n          name: input.name,\r\n          id: 'color-native-simple'\r\n        }}\r\n      >\r\n        {children}\r\n      </Select>\r\n      {renderFromHelper({ touched, error })}\r\n    </FormControl>\r\n  );\r\nconst FileAssignment = props => {\r\n    \r\n  const { handleSubmit, pristine, reset, submitting, classes } = props\r\n    return (\r\n    <Fragment>\r\n    <div>\r\n       <h3>File Details </h3>\r\n        <Field name=\"filestatus\" component={radioButton}>\r\n          <Radio value=\"complete\" label=\"complete\" />\r\n          <Radio value=\"incomplete\" label=\"incomplete\" />\r\n        </Field>\r\n      </div>\r\n      <div>\r\n      <h3>File Assignment </h3>\r\n        <Field\r\n          classes={classes}\r\n          name=\"stafflist\"\r\n          component={renderSelectField}\r\n          label=\"Staff List\">\r\n          <option value=\"\" />\r\n          <option value={1}>Jimmy</option>\r\n          <option value={2}>Ily</option>\r\n          <option value={3}>Carol</option>\r\n        </Field>\r\n      </div>\r\n      \r\n</Fragment>\r\n);\r\n    }\r\nexport default  FileAssignment ;\r\n","C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\AddNewForm.js",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\ViewNotes.js",[],"C:\\Users\\kisho\\VSCode-Workspace\\testfiletracker\\src\\SplitAmount.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":94,"column":11,"nodeType":"133","messageId":"134","endLine":94,"endColumn":23},{"ruleId":"131","severity":1,"message":"135","line":94,"column":35,"nodeType":"133","messageId":"134","endLine":94,"endColumn":40},{"ruleId":"127","replacedBy":"136"},{"ruleId":"129","replacedBy":"137"},{"ruleId":"131","severity":1,"message":"138","line":8,"column":7,"nodeType":"133","messageId":"134","endLine":8,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":22,"column":11,"nodeType":"133","messageId":"134","endLine":22,"endColumn":23},{"ruleId":"131","severity":1,"message":"135","line":22,"column":35,"nodeType":"133","messageId":"134","endLine":22,"endColumn":40},{"ruleId":"131","severity":1,"message":"139","line":22,"column":54,"nodeType":"133","messageId":"134","endLine":22,"endColumn":61},{"ruleId":"131","severity":1,"message":"140","line":15,"column":25,"nodeType":"133","messageId":"134","endLine":15,"endColumn":33},{"ruleId":"131","severity":1,"message":"141","line":15,"column":35,"nodeType":"133","messageId":"134","endLine":15,"endColumn":45},{"ruleId":"131","severity":1,"message":"140","line":35,"column":25,"nodeType":"133","messageId":"134","endLine":35,"endColumn":33},{"ruleId":"131","severity":1,"message":"135","line":35,"column":35,"nodeType":"133","messageId":"134","endLine":35,"endColumn":40},{"ruleId":"131","severity":1,"message":"141","line":35,"column":42,"nodeType":"133","messageId":"134","endLine":35,"endColumn":52},{"ruleId":"131","severity":1,"message":"139","line":35,"column":54,"nodeType":"133","messageId":"134","endLine":35,"endColumn":61},{"ruleId":"142","severity":1,"message":"143","line":10,"column":1,"nodeType":"144","endLine":39,"endColumn":3},{"ruleId":"142","severity":1,"message":"145","line":7,"column":1,"nodeType":"144","endLine":38,"endColumn":3},{"ruleId":"131","severity":1,"message":"132","line":10,"column":11,"nodeType":"133","messageId":"134","endLine":10,"endColumn":23},{"ruleId":"131","severity":1,"message":"139","line":10,"column":54,"nodeType":"133","messageId":"134","endLine":10,"endColumn":61},{"ruleId":"131","severity":1,"message":"132","line":52,"column":11,"nodeType":"133","messageId":"134","endLine":52,"endColumn":23},{"ruleId":"131","severity":1,"message":"140","line":52,"column":25,"nodeType":"133","messageId":"134","endLine":52,"endColumn":33},{"ruleId":"131","severity":1,"message":"135","line":52,"column":35,"nodeType":"133","messageId":"134","endLine":52,"endColumn":40},{"ruleId":"131","severity":1,"message":"141","line":52,"column":42,"nodeType":"133","messageId":"134","endLine":52,"endColumn":52},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.",["146"],["147"],"'renderTextField' is assigned a value but never used.","'classes' is assigned a value but never used.","'pristine' is assigned a value but never used.","'submitting' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]