[{"C:\\node workspace\\testapptracker\\src\\index.js":"1","C:\\node workspace\\testapptracker\\src\\App.js":"2","C:\\node workspace\\testapptracker\\src\\reportWebVitals.js":"3","C:\\node workspace\\testapptracker\\src\\MaterialUiForm.js":"4","C:\\node workspace\\testapptracker\\src\\asyncValidate.js":"5","C:\\node workspace\\testapptracker\\src\\Table.js":"6","C:\\node workspace\\testapptracker\\src\\AppTracker.js":"7","C:\\node workspace\\testapptracker\\src\\FileAssignment.js":"8","C:\\node workspace\\testapptracker\\src\\NotesManager.jsx":"9","C:\\node workspace\\testapptracker\\src\\FileDetails.jsx":"10","C:\\node workspace\\testapptracker\\src\\rowsData.js":"11","C:\\node workspace\\testapptracker\\src\\DocumentReview.jsx":"12","C:\\node workspace\\testapptracker\\src\\MultipleItemStatus.jsx":"13","C:\\node workspace\\testapptracker\\src\\MailScreening.jsx":"14","C:\\node workspace\\testapptracker\\src\\PreScreening.jsx":"15","C:\\node workspace\\testapptracker\\src\\BillingDetails.jsx":"16","C:\\node workspace\\testapptracker\\src\\SplitAmount.js":"17","C:\\node workspace\\testapptracker\\src\\ViewNotes.js":"18","C:\\node workspace\\testapptracker\\src\\AddNewForm.js":"19","C:\\node workspace\\testapptracker\\src\\AddNotes.js":"20"},{"size":1274,"mtime":1612467273280,"results":"21","hashOfConfig":"22"},{"size":795,"mtime":1612467273111,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1612467273284,"results":"24","hashOfConfig":"22"},{"size":2092,"mtime":1612510445833,"results":"25","hashOfConfig":"22"},{"size":404,"mtime":1612467273225,"results":"26","hashOfConfig":"22"},{"size":1296,"mtime":1612648003768,"results":"27","hashOfConfig":"22"},{"size":1802,"mtime":1612510409778,"results":"28","hashOfConfig":"22"},{"size":2675,"mtime":1612506285340,"results":"29","hashOfConfig":"22"},{"size":790,"mtime":1612653211532,"results":"30","hashOfConfig":"22"},{"size":5900,"mtime":1612651785403,"results":"31","hashOfConfig":"22"},{"size":657,"mtime":1612467273294,"results":"32","hashOfConfig":"22"},{"size":804,"mtime":1612467273142,"results":"33","hashOfConfig":"22"},{"size":953,"mtime":1612467273185,"results":"34","hashOfConfig":"22"},{"size":1245,"mtime":1612508738204,"results":"35","hashOfConfig":"22"},{"size":1368,"mtime":1612651785432,"results":"36","hashOfConfig":"22"},{"size":1078,"mtime":1612651785371,"results":"37","hashOfConfig":"22"},{"size":1652,"mtime":1612651785451,"results":"38","hashOfConfig":"22"},{"size":1648,"mtime":1612651785460,"results":"39","hashOfConfig":"22"},{"size":2276,"mtime":1612653012216,"results":"40","hashOfConfig":"22"},{"size":3049,"mtime":1612654654706,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1yq5ivd",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\node workspace\\testapptracker\\src\\index.js",[],["90","91"],"C:\\node workspace\\testapptracker\\src\\App.js",[],"C:\\node workspace\\testapptracker\\src\\reportWebVitals.js",[],"C:\\node workspace\\testapptracker\\src\\MaterialUiForm.js",["92","93","94","95"],"import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport asyncValidate from \"./asyncValidate\";\r\nimport Table from \"./Table\";\r\nimport FileDetails from \"./FileDetails\";\r\nimport AppTracker from \"./AppTracker\";\r\nimport NotesManager from \"./NotesManager\";\r\nimport FileAssignment from \"./FileAssignment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  const requiredFields = [\r\n    \"firstName\",\r\n    \"lastName\",\r\n    \"email\",\r\n    \"favoriteColor\",\r\n    \"notes\",\r\n  ];\r\n  requiredFields.forEach((field) => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\";\r\n    }\r\n  });\r\n  if (\r\n    values.email &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n  ) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst MaterialUiForm = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/************ */}\r\n      <div>\r\n        <h3>Files Search </h3>\r\n        {/************ */}\r\n        <Grid container>\r\n          <Grid item xs={4}></Grid>\r\n          <Grid item xs={8}>\r\n            <FileDetails />\r\n          </Grid>\r\n        </Grid>\r\n        {/************ */}\r\n        <div>\r\n          <h3>Files Table </h3>\r\n          <Grid container>\r\n            <Grid item xs={3}></Grid>\r\n            <Grid item xs={6}>\r\n              <Table />\r\n            </Grid>\r\n            <Grid item xs={3}></Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      {/************ */}\r\n      <br />\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={6}>\r\n          <FileAssignment />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <NotesManager />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <AppTracker />\r\n      </Grid>\r\n      <br />\r\n      <br />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"MaterialUiForm\", // a unique identifier for this form\r\n  validate,\r\n  asyncValidate,\r\n})(MaterialUiForm);\r\n","C:\\node workspace\\testapptracker\\src\\asyncValidate.js",[],"C:\\node workspace\\testapptracker\\src\\Table.js",["96"],"import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport rows from \"./rowsData\";\r\n\r\nexport default () => (\r\n  <div>\r\n    <Paper className=\"container\">\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>S. No</TableCell>\r\n            <TableCell>File No</TableCell>\r\n            <TableCell>ACN</TableCell>\r\n            <TableCell>Company Name</TableCell>\r\n            <TableCell>Application Date</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(({ id, sid, fno, acn, companyname, appdate }) => (\r\n            <TableRow key={id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {sid}\r\n              </TableCell>\r\n              <TableCell >{fno}</TableCell>\r\n              <TableCell >{acn}</TableCell>\r\n              <TableCell >{companyname}</TableCell>\r\n              <TableCell >{appdate}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  </div>\r\n);\r\n","C:\\node workspace\\testapptracker\\src\\AppTracker.js",["97","98","99"],"import React, { Fragment } from \"react\";\r\nimport BillingDetails from \"./BillingDetails\";\r\nimport MultipleItemStatus from \"./MultipleItemStatus\";\r\nimport MailScreening from \"./MailScreening\";\r\nimport PreScreening from \"./PreScreening\";\r\nimport DocumentReview from \"./DocumentReview\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\nconst AppTracker = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\r\n  return (\r\n    <Fragment>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <h2>App Tracking Stages</h2>\r\n          {/************ */}\r\n          <Grid container>\r\n            <Grid item xs={2}></Grid>\r\n            <Grid item xs={3}>\r\n              <PreScreening />\r\n              {/************ */}\r\n              <Divider />\r\n              {/************ */}\r\n\r\n              <MailScreening />\r\n            </Grid>\r\n            {/************ */}\r\n            <Grid item xs={3}>\r\n              <BillingDetails />\r\n            </Grid>\r\n            {/************ */}\r\n            <Grid item xs={3}>\r\n              <DocumentReview />\r\n              <MultipleItemStatus />\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <Grid item xs={12}>\r\n          <div>\r\n            <button type=\"submit\" disabled={pristine || submitting}>\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              disabled={pristine || submitting}\r\n              onClick={reset}\r\n            >\r\n              Clear Values\r\n            </button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default AppTracker;\r\n","C:\\node workspace\\testapptracker\\src\\FileAssignment.js",["100","101","102","103"],"import React, { Fragment } from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return;\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>;\r\n  }\r\n};\r\nconst radioButton = ({ input, ...rest }) => (\r\n  <FormControl>\r\n    <RadioGroup {...input} {...rest} row label=\"File Details\">\r\n      <FormLabel>File Details </FormLabel>\r\n      <FormControlLabel value=\"complete\" control={<Radio />} label=\"Complete\" />\r\n      <FormControlLabel\r\n        value=\"incomplete\"\r\n        control={<Radio />}\r\n        label=\"Incomplete\"\r\n      />\r\n    </RadioGroup>\r\n  </FormControl>\r\n);\r\n\r\nconst renderSelectField = ({\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  children,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error}>\r\n    <InputLabel htmlFor=\"color-native-simple\">{label}</InputLabel>\r\n    <Select\r\n      native\r\n      {...input}\r\n      {...custom}\r\n      inputProps={{\r\n        name: input.name,\r\n        id: \"color-native-simple\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n);\r\nconst FileAssignment = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\r\n  return (\r\n    <Fragment>\r\n      <Grid container>\r\n        <Grid item xs={6} style={{ display: \"flex\" }}>\r\n          <Field row name=\"filestatus\" component={radioButton}>\r\n            <Radio value=\"complete\" label=\"complete\" />\r\n            <Radio value=\"incomplete\" label=\"incomplete\" />\r\n          </Field>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <label> File Assignment </label>\r\n\r\n          <Field\r\n            classes={classes}\r\n            name=\"stafflist\"\r\n            component={renderSelectField}\r\n            label=\"Staff List\"\r\n          >\r\n            <option value=\"\" />\r\n            <option value={1}>Jimmy</option>\r\n            <option value={2}>Ily</option>\r\n            <option value={3}>Carol</option>\r\n            <option value={4}>Perp Staff</option>\r\n          </Field>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default FileAssignment;\r\n","C:\\node workspace\\testapptracker\\src\\NotesManager.jsx",["104"],"C:\\node workspace\\testapptracker\\src\\FileDetails.jsx",["105","106"],"import React, { Fragment } from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Field } from \"redux-form\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport AddNewForm from './AddNewForm';\r\n\r\n/*\r\n filedetails: {\r\n          details: { complete: 'yes', incomplete: 'no' },\r\n          assignmentList: { name1: 'Jimmy', name2: 'Ily',name3: 'Carol', },\r\n          assignedfor: 'Jimmy' \r\n      }\r\n*/\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return;\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>;\r\n  }\r\n};\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n);\r\n\r\nconst radioButton2 = ({ input, ...rest }) => (\r\n  <FormControl>\r\n    <RadioGroup {...input} {...rest}>\r\n      <FormControlLabel value=\"assigned\" control={<Radio />} label=\"Assigned\" />\r\n      <FormControlLabel\r\n        value=\"unassigned\"\r\n        control={<Radio />}\r\n        label=\"UnAssigned\"\r\n      />\r\n      <FormControlLabel value=\"both\" control={<Radio />} label=\"Both\" />\r\n    </RadioGroup>\r\n  </FormControl>\r\n);\r\n\r\nconst renderSelectField = ({\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  children,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error}>\r\n    <InputLabel htmlFor=\"color-native-simple\">{label}</InputLabel>\r\n    <Select\r\n      native\r\n      {...input}\r\n      {...custom}\r\n      inputProps={{\r\n        name: input.name,\r\n        id: \"color-native-simple\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n);\r\n\r\nconst FileDetails = (props) => {\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2021-02-05T21:11:54'));\r\n \r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Grid container>\r\n          <Grid item xs={3}>\r\n            <div>\r\n           \r\n       \r\n       <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n       From Date: \r\n       <KeyboardDatePicker\r\n         margin=\"normal\"\r\n         id=\"date-picker-dialog\"\r\n         label=\"Date picker dialog\"\r\n         format=\"MM/dd/yyyy\"\r\n         value={selectedDate}\r\n         onChange={handleDateChange}\r\n         KeyboardButtonProps={{\r\n           'aria-label': 'change date',\r\n         }}\r\n       />\r\n</MuiPickersUtilsProvider>\r\n            </div>\r\n    \r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <label>Application Status </label>\r\n            <Field\r\n              classes={classes}\r\n              name=\"appStatus\"\r\n              component={renderSelectField}\r\n              label=\"Application Status\"\r\n            >\r\n              <option value=\"\" />\r\n              <option value={1}>Submitted</option>\r\n              <option value={2}>Initial Review</option>\r\n              <option value={3}>Final Review</option>\r\n              <option value={4}>Issued</option>\r\n              <option value={5}>Closed out</option>\r\n            </Field>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={3}>\r\n            <div>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n           To Date:\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date picker dialog\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider>\r\n\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <label>Enter </label>\r\n          \r\n        <Field\r\n          name=\"companyACN\"\r\n          component={renderTextField}\r\n          label=\"Company ACN/Name\"\r\n        />\r\n          </Grid>\r\n          <br />\r\n        </Grid>\r\n        <br />\r\n        <Grid container>\r\n          <Grid item xs={6} style={{ display: \"flex\" }}>\r\n            File Assignment Status:\r\n            <Field\r\n              row\r\n              name=\"fileAssignstatus\"\r\n              component={radioButton2}\r\n              label=\"File Assignment Status:\"\r\n            >\r\n              <label>Assigned </label>\r\n              <Radio value=\"Assigned\" label=\"Assigned\" />\r\n              <label>Un Assigned </label>\r\n              <Radio value=\"unAssigned\" label=\"unAssigned\" />\r\n              <label>Both </label> <Radio value=\"Both\" label=\"Both\" />\r\n            </Field>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid item xs={1}>\r\n            <button type=\"submit\" disabled={pristine || submitting}>\r\n              Search\r\n            </button>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <AddNewForm/>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      {/*\r\n        <p>Details: Complete {props.filedetails.details.complete}\r\n        or Incomplete {props.filedetails.details.incomplete}</p>\r\n        */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FileDetails;\r\n","C:\\node workspace\\testapptracker\\src\\rowsData.js",["107"],"let id = 0;\r\nconst createData = (sid, fno, acn, companyname, appdate) => {\r\n  id += 1;\r\n  return { id, sid, fno, acn, companyname, appdate };\r\n};\r\n\r\nexport default [\r\n  createData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  ),\r\ncreateData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  ),\r\ncreateData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  ),\r\ncreateData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  ),\r\ncreateData(\r\n    159,\r\n    780,\r\n    'ACN-0018908',\r\n    'Sunbelt Rentals',  \r\n'11/23/2020'  )\r\n];\r\n","C:\\node workspace\\testapptracker\\src\\DocumentReview.jsx",[],"C:\\node workspace\\testapptracker\\src\\MultipleItemStatus.jsx",[],"C:\\node workspace\\testapptracker\\src\\MailScreening.jsx",["108","109","110"],"import React, { Fragment } from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n);\r\nconst MailScreening = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting, classes } = props;\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <h3>Mail Screening</h3>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            Drag and Drop your files here\r\n            <Field\r\n              name=\"dragDrop\"\r\n              component={renderTextField}\r\n              label=\"Drag and Drop\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            Or Click below for file upload\r\n            <br />\r\n            <br />\r\n            <button type=\"submit\" disabled={pristine || submitting}>\r\n              File Upload\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default MailScreening;\r\n","C:\\node workspace\\testapptracker\\src\\PreScreening.jsx",[],"C:\\node workspace\\testapptracker\\src\\BillingDetails.jsx",[],"C:\\node workspace\\testapptracker\\src\\SplitAmount.js",[],"C:\\node workspace\\testapptracker\\src\\ViewNotes.js",[],"C:\\node workspace\\testapptracker\\src\\AddNewForm.js",[],"C:\\node workspace\\testapptracker\\src\\AddNotes.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":35,"column":25,"nodeType":"117","messageId":"118","endLine":35,"endColumn":33},{"ruleId":"115","severity":1,"message":"119","line":35,"column":35,"nodeType":"117","messageId":"118","endLine":35,"endColumn":40},{"ruleId":"115","severity":1,"message":"120","line":35,"column":42,"nodeType":"117","messageId":"118","endLine":35,"endColumn":52},{"ruleId":"115","severity":1,"message":"121","line":35,"column":54,"nodeType":"117","messageId":"118","endLine":35,"endColumn":61},{"ruleId":"122","severity":1,"message":"123","line":10,"column":1,"nodeType":"124","endLine":39,"endColumn":3},{"ruleId":"115","severity":1,"message":"125","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":11},{"ruleId":"115","severity":1,"message":"126","line":12,"column":11,"nodeType":"117","messageId":"118","endLine":12,"endColumn":23},{"ruleId":"115","severity":1,"message":"121","line":12,"column":54,"nodeType":"117","messageId":"118","endLine":12,"endColumn":61},{"ruleId":"115","severity":1,"message":"126","line":59,"column":11,"nodeType":"117","messageId":"118","endLine":59,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":59,"column":25,"nodeType":"117","messageId":"118","endLine":59,"endColumn":33},{"ruleId":"115","severity":1,"message":"119","line":59,"column":35,"nodeType":"117","messageId":"118","endLine":59,"endColumn":40},{"ruleId":"115","severity":1,"message":"120","line":59,"column":42,"nodeType":"117","messageId":"118","endLine":59,"endColumn":52},{"ruleId":"115","severity":1,"message":"127","line":8,"column":7,"nodeType":"117","messageId":"118","endLine":8,"endColumn":22},{"ruleId":"115","severity":1,"message":"126","line":94,"column":11,"nodeType":"117","messageId":"118","endLine":94,"endColumn":23},{"ruleId":"115","severity":1,"message":"119","line":94,"column":35,"nodeType":"117","messageId":"118","endLine":94,"endColumn":40},{"ruleId":"122","severity":1,"message":"128","line":7,"column":1,"nodeType":"124","endLine":38,"endColumn":3},{"ruleId":"115","severity":1,"message":"126","line":22,"column":11,"nodeType":"117","messageId":"118","endLine":22,"endColumn":23},{"ruleId":"115","severity":1,"message":"119","line":22,"column":35,"nodeType":"117","messageId":"118","endLine":22,"endColumn":40},{"ruleId":"115","severity":1,"message":"121","line":22,"column":54,"nodeType":"117","messageId":"118","endLine":22,"endColumn":61},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'pristine' is assigned a value but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","'submitting' is assigned a value but never used.","'classes' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Box' is defined but never used.","'handleSubmit' is assigned a value but never used.","'renderTextField' is assigned a value but never used.","Assign array to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]